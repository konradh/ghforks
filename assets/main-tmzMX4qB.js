var Ie=Object.defineProperty;var Be=(t,e,o)=>e in t?Ie(t,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[e]=o;var I=(t,e,o)=>(Be(t,typeof e!="symbol"?e+"":e,o),o),Y=(t,e,o)=>{if(!e.has(t))throw TypeError("Cannot "+o)};var w=(t,e,o)=>(Y(t,e,"read from private field"),o?o.call(t):e.get(t)),C=(t,e,o)=>{if(e.has(t))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(t):e.set(t,o)},N=(t,e,o,a)=>(Y(t,e,"write to private field"),a?a.call(t,o):e.set(t,o),o);var X=(t,e,o)=>(Y(t,e,"access private method"),o);import{d as R,r as _,o as Q,a as r,c as i,w as te,v as he,b as n,e as fe,n as Ce,p as Z,f as u,t as p,g as f,F as m,h as j,i as W,j as Re,u as Ae,k as qe,l as F,m as M,q as ae,s as Pe,x as Te,y as Le,z as De,A as ne,B as P,C as re,T as ie,D as ze}from"./utils-omEY-tiR.js";const Fe={class:"input-set"},Oe=["disabled"],Ee=R({__name:"RepoInput",emits:["change"],setup(t,{emit:e}){const o=e,a=_(""),l=_(!1);function s(){if(a.value==="")l.value=!0;else{const d=Z(a.value);l.value=d!==null}}function h(){const d=Z(a.value);d&&v(d)}function y(){const d=new URL(window.location.toString()),g=d.searchParams.get("owner"),c=d.searchParams.get("repo");if(c&&g){const b=Z(g+"/"+c);b&&v(b)}}function v(d){s(),a.value=d.owner+"/"+d.name;const g=new URL(window.location.toString());g.searchParams.set("owner",d.owner),g.searchParams.set("repo",d.name),window.history.pushState({},"",g.toString()),o("change",d)}return Q(async()=>{s(),y()}),(d,g)=>(r(),i("div",Fe,[te(n("input",{type:"text","onUpdate:modelValue":g[0]||(g[0]=c=>a.value=c),onKeydown:g[1]||(g[1]=fe(c=>h(),["enter"])),onInput:g[2]||(g[2]=c=>s()),placeholder:"owner/repo or https://github.com/owner/repo",class:Ce([l.value?"":"invalid"])},null,34),[[he,a.value]]),n("button",{type:"button",onClick:g[3]||(g[3]=c=>h()),disabled:!l.value||!a.value},"Go",8,Oe)]))}}),O=(t,e)=>{const o=t.__vccOpts||t;for(const[a,l]of e)o[a]=l;return o},Ne=O(Ee,[["__scopeId","data-v-4d860fb9"]]),pe="83394a24275b2465d58c",oe="https://github-spork-oauth-proxy-prod.cloudflare-d1e.workers.dev",H="token-verified",U="token",V="oauth-state",x="oauth-stored-url";async function me(){const t=localStorage.getItem(U);if(!t)return null;const e=JSON.parse(t),o=sessionStorage.getItem(H);return o&&JSON.parse(o)===!0?e.token:(await ye(e.token)).valid?(sessionStorage.setItem(H,JSON.stringify(!0)),e.token):(localStorage.removeItem(U),null)}async function ge(t,e="manual"){const o=await ye(t);if(!o.valid)return!1;await ve();const a={token:t,type:e,user:o.user};return localStorage.setItem(U,JSON.stringify(a)),sessionStorage.setItem(H,JSON.stringify(!0)),!0}async function ye(t){const e=await fetch("https://api.github.com/user",{headers:[["Authorization","Bearer "+t]]});return e.status!==200?{valid:!1}:{valid:!0,user:(await e.json()).login}}function Me(){const t=window.crypto.getRandomValues(new Uint8Array(8)).reduce((o,a)=>o+a.toString(16).padStart(2,"0"),"");sessionStorage.setItem(V,t),sessionStorage.setItem(x,document.location.toString());const e=new URL(oe+"/api/github/oauth/login");e.searchParams.set("client_id",pe),e.searchParams.set("scopes","repo"),e.searchParams.set("state",t),window.location.replace(e)}async function Ue(){const t=new URL(window.location.toString()),e=t.searchParams.get("code"),o=t.searchParams.get("state"),a=t.searchParams.get("error");if(!o||!(e||a))return!1;if(a&&console.error("oauth error",a),o!==sessionStorage.getItem(V))return console.warn("oauth state mismatch"),sessionStorage.removeItem(V),!1;sessionStorage.removeItem(V),t.searchParams.delete("code"),t.searchParams.delete("state"),window.history.replaceState({},"",t);const l=sessionStorage.getItem(x);sessionStorage.removeItem(x),l&&window.history.replaceState({},"",l);const h=await(await fetch(oe+"/api/github/oauth/token",{method:"POST",body:JSON.stringify({client_id:pe,code:e})})).json();return await ge(h.authentication.token,"oauth")}async function ve(){const t=localStorage.getItem(U);if(t){const e=JSON.parse(t);e.type==="oauth"&&await fetch(oe+"/api/github/oauth/token",{method:"DELETE",headers:[["Authorization","token "+e]]})}localStorage.removeItem(U),sessionStorage.removeItem(H)}const E=t=>(j("data-v-c99aea60"),t=t(),W(),t),Ge=E(()=>n("i",{class:"fa-brands fa-github fa-2xl"},null,-1)),Ve=E(()=>n("br",null,null,-1)),He=E(()=>n("i",{class:"fa-solid fa-key fa-2xl"},null,-1)),Je={id:"pat-modal"},Ke=E(()=>n("h3",null,"Use GitHub Access Token",-1)),Qe=E(()=>n("p",null,[n("a",{href:"https://github.com/settings/personal-access-tokens/new",target:"_blank"},"Create"),u(' a fine-grained personal access token. You do not need to give any special permissions. "Public Repositories (read-only)" is sufficient. ')],-1)),je={key:0,class:"error padded"},We=E(()=>n("p",null," The token will be stored in you browser's local storage. ",-1)),Ye=E(()=>n("i",{class:"fa-solid fa-right-from-bracket fa-2xl"},null,-1)),Xe=R({__name:"Auth",emits:["login","logout"],setup(t,{emit:e}){const o=e,a=_(!1),l=_(""),s=_(null);async function h(){await Me()}async function y(){await ve(),await c()}function v(){s.value=null,l.value="";const b=document.getElementById("pat-modal");b==null||b.showModal()}function d(){const b=document.getElementById("pat-modal");b==null||b.close()}async function g(){if(s.value=null,await ge(l.value)){await c();return}s.value="Invalid token."}async function c(){const b=await me();if(!b){a.value=!1,o("logout");return}a.value=!0,o("login",b)}return Q(async()=>{await Ue(),await c()}),(b,k)=>a.value?(r(),i("button",{key:1,type:"button",class:"padded",onClick:k[6]||(k[6]=S=>y())},[Ye,u(" Sign out ")])):(r(),i(m,{key:0},[n("button",{type:"button",class:"padded margin",onClick:k[0]||(k[0]=S=>h())},[Ge,u(" Sign in with GitHub ")]),Ve,n("button",{type:"button",class:"padded margin",onClick:k[1]||(k[1]=S=>v())},[He,u(" Use Access Token ")]),n("dialog",Je,[Ke,Qe,n("div",null,[te(n("input",{"onUpdate:modelValue":k[2]||(k[2]=S=>l.value=S),id:"pat-input",placeholder:"github_pat_",onKeydown:k[3]||(k[3]=fe(S=>g(),["enter"]))},null,544),[[he,l.value]])]),s.value?(r(),i("div",je,p(s.value),1)):f("",!0),We,n("div",null,[n("button",{type:"button",class:"margin",onClick:k[4]||(k[4]=S=>g())},"Save token"),n("button",{type:"button",class:"margin",onClick:k[5]||(k[5]=S=>d())},"Cancel")])])],64))}}),le=O(Xe,[["__scopeId","data-v-c99aea60"]]),Ze={},xe=Re('<p>Find useful forks of GitHub repositories.</p><div class="faq"><h2>FAQ</h2><details><summary>Why do I need to sign in to use this?</summary><p> This app uses GitHub&#39;s <a href="https://docs.github.com/graphql">GraphQL API</a>, which requires authentication. While the REST API can be used without authentication within a small rate limit quota, the GraphQL API has the benefit that it can return more data in one request and only returns the data we need. </p></details><details><summary>Why does this request full control of my private repositories when I use &quot;Sign in with GitHub&quot;? </summary><p> This app never touches your private repositories. Unfortunately, the <code>Ref.compare</code> function of the GraphQL API requires the <code>repo</code> scope when authenticating with an OAuth access token, or a classic personal access token. I consider this a bug, as the same functionality works without special permissions when authenticating with a fine-grained personal access token. The issue is documented <a href="https://github.com/orgs/community/discussions/106598">here</a> and I also filed a bug with GitHub support. </p></details><details><summary>Why does this send my OAuth authorization code to your server?</summary><p> GitHub does not support fully public OAuth clients. The Code Flow with PKCE and the deprecated Implicit Flow are not implemented. Additionally, the OAuth token endpoint does not support CORS pre-flight requests, so I can&#39;t include the client secret in the webpage and send the request from the browser, even if I wanted to. You can see the source of the OAuth relay <a href="https://github.com/konradh/github-oauth-app-proxy">here</a>, but you have to trust me that that&#39;s actually the code running on the server and that I don&#39;t use your access token outside of the client-side web app. If you use a fine-grained personal access token, it is not sent to any server apart from the GitHub API. </p></details></div>',2);function et(t,e){return xe}const tt=O(Ze,[["render",et]]),ot=["href"],st=n("span",{class:"space"},null,-1),at={class:"stats"},nt=["href"],rt={title:"stars"},it=n("i",{class:"fa-solid fa-star"},null,-1),lt=["href"],ut={title:"watchers"},dt=n("i",{class:"fa-solid fa-eye"},null,-1),ct=["href"],ht={title:"open issues"},ft=n("i",{class:"fa-regular fa-circle-dot"},null,-1),pt=["href"],mt={title:"open pull requests"},gt=n("i",{class:"fa-solid fa-code-pull-request"},null,-1),yt=["href"],vt={title:"direct forks"},kt=n("i",{class:"fa-solid fa-code-fork"},null,-1),wt=n("i",{class:"fa-solid fa-heart-pulse"},null,-1),ke=R({__name:"RepoHead",props:{repo:{}},setup(t){return(e,o)=>(r(),i(m,null,[n("div",null,[n("a",{href:e.repo.url,target:"_blank",class:"repo"},p(e.repo.owner)+"/"+p(e.repo.name),9,ot),st,n("div",at,[n("a",{href:e.repo.url+"/stargazers",target:"_blank",class:"no-highlight"},[n("span",rt,[it,u(" "+p(e.repo.stars),1)])],8,nt),n("a",{href:e.repo.url+"/watchers",target:"_blank",class:"no-highlight"},[n("span",ut,[dt,u(" "+p(e.repo.watchers),1)])],8,lt),n("a",{href:e.repo.url+"/issues",target:"_blank",class:"no-highlight"},[n("span",ht,[ft,u(" "+p(e.repo.issues.open),1)])],8,ct),n("a",{href:e.repo.url+"/pulls",target:"_blank",class:"no-highlight"},[n("span",mt,[gt,u(" "+p(e.repo.pullRequests.open),1)])],8,pt),n("a",{href:e.repo.url+"/forks",target:"_blank",class:"no-highlight"},[n("span",vt,[kt,u(" "+p(e.repo.forks.direct),1)])],8,yt)])]),n("div",null,[n("span",null,[wt,u(),e.repo.updatedAt>e.repo.createdAt?(r(),i(m,{key:0},[u("updated "+p(Ae(qe)(e.repo.updatedAt)),1)],64)):(r(),i(m,{key:1},[u("never updated")],64))])])],64))}}),bt={class:"card"},_t={class:"description"},$t=R({__name:"Repo",props:{repo:{}},setup(t){return(e,o)=>(r(),i("div",bt,[F(ke,{repo:e.repo},null,8,["repo"]),n("p",_t,p(e.repo.description),1)]))}}),se=t=>(j("data-v-4ffceb98"),t=t(),W(),t),St={class:"card"},It={key:0,class:"description"},Bt={key:1},Ct={class:"new-branches"},Rt=se(()=>n("span",null,"branches not present in parent:",-1)),At=["href"],qt={key:2},Pt={key:0},Tt=se(()=>n("i",{class:"fa-solid fa-code-commit"},null,-1)),Lt={class:"additions"},Dt={class:"deletions"},zt=["href"],Ft={key:0,class:"i"},Ot={key:1},Et=se(()=>n("i",{class:"fa-solid fa-spinner fa-spin"},null,-1)),Nt={key:3},Mt=R({__name:"Fork",props:{fork:{}},emits:["requestCommits"],setup(t,{emit:e}){const o=t,a=e;function l(s){s.newState==="open"&&!o.fork.diff.commits&&a("requestCommits",o.fork.id)}return(s,h)=>{var y,v,d,g;return r(),i("div",St,[F(ke,{repo:s.fork},null,8,["repo"]),(y=s.fork.diff)!=null&&y.descriptionChanged?(r(),i("p",It,p(s.fork.description),1)):f("",!0),s.fork.diff&&((v=s.fork.diff)==null?void 0:v.newBranches.length)>0?(r(),i("div",Bt,[n("div",Ct,[Rt,n("div",null,[(r(!0),i(m,null,M((d=s.fork.diff)==null?void 0:d.newBranches,(c,b)=>{var k;return r(),i(m,{key:c},[n("a",{href:`${s.fork.url}/tree/${c.name}`,target:"_blank",class:"branch"},p(c.name),9,At),b!=((k=s.fork.diff)==null?void 0:k.newBranches.length)-1?(r(),i(m,{key:0},[u(", ")],64)):f("",!0)],64)}),128))])])])):f("",!0),s.fork.diff&&((g=s.fork.diff)==null?void 0:g.aheadBy)>0?(r(),i("div",qt,[n("details",{class:"commits",onToggle:l},[n("summary",null,[s.fork.diff.aheadBy>0?(r(),i(m,{key:0},[u(p(s.fork.diff.aheadBy)+" ahead",1)],64)):f("",!0),s.fork.diff.aheadBy>0&&s.fork.diff.behindBy>0?(r(),i(m,{key:1},[u(", ")],64)):f("",!0),s.fork.diff.behindBy>0?(r(),i(m,{key:2},[u(p(s.fork.diff.behindBy)+" behind",1)],64)):f("",!0),s.fork.diff.aheadBy===0&&s.fork.diff.behindBy===0?(r(),i(m,{key:3},[u("Default branch is up to date")],64)):f("",!0),u(". ")]),s.fork.diff.commits?(r(),i("ul",Pt,[(r(!0),i(m,null,M(s.fork.diff.commits,c=>(r(),i("li",{key:c.commitId},[Tt,u(),n("span",Lt,p(c.additions),1),n("span",Dt,p(c.deletions),1),u(),n("a",{href:c.url,target:"_blank"},p(c.message),9,zt)]))),128)),s.fork.diff.aheadBy>s.fork.diff.commits.length?(r(),i("li",Ft,[(r(),i(m,null,M(3,c=>n("i",{key:c,class:"fa-solid fa-code-commit"})),64)),u(" "+p(s.fork.diff.aheadBy-s.fork.diff.commits.length)+" more commits",1)])):f("",!0)])):(r(),i("span",Ot,[Et,u(" loading...")]))],32)])):s.fork.diff?(r(),i("div",Nt,[s.fork.diff.aheadBy>0?(r(),i(m,{key:0},[u(p(s.fork.diff.aheadBy)+" ahead",1)],64)):f("",!0),s.fork.diff.aheadBy>0&&s.fork.diff.behindBy>0?(r(),i(m,{key:1},[u(", ")],64)):f("",!0),s.fork.diff.behindBy>0?(r(),i(m,{key:2},[u(p(s.fork.diff.behindBy)+" behind",1)],64)):f("",!0),s.fork.diff.aheadBy===0&&s.fork.diff.behindBy===0?(r(),i(m,{key:3},[u("Default branch is up to date")],64)):f("",!0),u(". ")])):f("",!0)])}}}),ue=O(Mt,[["__scopeId","data-v-4ffceb98"]]),Ut={class:"input-set"},Gt=["disabled"],Vt={key:0,class:"fa-solid fa-spinner fa-spin"},Ht=["disabled"],Jt={class:"padded"},Kt=R({__name:"LoadMoreButton",props:ae({loadingText:{},loading:{type:Boolean}},{modelValue:{type:Boolean},modelModifiers:{}}),emits:ae(["click"],["update:modelValue"]),setup(t,{emit:e}){const o=e,a=Pe(t,"modelValue");return(l,s)=>(r(),i("div",Ut,[n("button",{id:"load-more",type:"button",onClick:s[0]||(s[0]=h=>o("click")),disabled:l.loading},[l.loading?(r(),i("i",Vt)):f("",!0),u(),l.loadingText?(r(),i(m,{key:1},[u(p(l.loadingText),1)],64)):(r(),i(m,{key:2},[u("loading...")],64))],8,Gt),n("button",{id:"load-all",type:"button",onClick:s[2]||(s[2]=h=>o("click")),disabled:l.loading},[n("label",Jt,[te(n("input",{type:"checkbox","onUpdate:modelValue":s[1]||(s[1]=h=>a.value=h)},null,512),[[Te,a.value]]),u(" Load all ")])],8,Ht)]))}}),de=O(Kt,[["__scopeId","data-v-9cfd50d3"]]),Qt="https://api.github.com";class we extends Error{constructor(o){super("[GraphQL] Timeout");I(this,"time");this.time=o}}class be extends Error{constructor(o){super("[GraphQL] "+JSON.stringify(o,null,2));I(this,"error");this.error=o}}function jt(t){const e=t.get("x-ratelimit-limit"),o=t.get("x-ratelimit-remaining"),a=t.get("x-ratelimit-reset"),l=t.get("x-ratelimit-used");return[e,o,a,l].some(s=>s===null||isNaN(Number(s)))?null:{limit:Number(e),remaining:Number(o),reset:new Date(a*1e3),used:Number(l)}}class ce{constructor(e){I(this,"token");I(this,"rateLimit",null);this.token=e}async graphql(e,o){const a=performance.now(),l=await fetch(Qt+"/graphql",{method:"POST",headers:[["Authorization","token "+this.token],["Accept","application/vnd.github.v3+json"]],body:JSON.stringify({query:e,variables:o})}),s=performance.now()-a;this.rateLimit=jt(l.headers);const h=await l.json();switch(l.status){case 200:if(h.errors)throw new be(h);if(h.data)return h.data;break;case 502:if(s>=1e4)throw new we(s/1e3);break}throw new Error("[GithubAPI] unexpected response")}}function q(t,e=1,o=0){return t=Math.max(t-o,0),t=t/e,t/(t+1)}function Wt(t){if(t.diff.aheadBy===0&&t.diff.newBranches.length===0||t.updatedAt<=t.createdAt)return-1/0;var e=t.diff.newBranches.map(o=>q(o.aheadBy)).reduce((o,a)=>o+a,0);return t.diff.newBranches.length>1&&(e/=t.diff.newBranches.length),3*q(t.diff.aheadBy)+e+q(t.stars,10,1)+q(t.watchers,5,1)-2*q(new Date().valueOf()-t.pushedAt.valueOf(),60*60*24*365)+q(t.issues.open+t.issues.closed)+q(t.pullRequests.open+t.pullRequests.closed)}const _e=`fragment RepoInfo on Repository {
  id
  owner {
    login
  }
  url
  name
  description
  watchers {
    totalCount
  }
  stargazers {
    totalCount
  }
  pushedAt
  createdAt
  updatedAt
  forkCount
  directForks: forks(privacy: PUBLIC) {
    totalCount
  }
  defaultBranchRef {
    name
  }
  openIssues: issues(states:OPEN) {
    totalCount
  }
  closedIssues: issues(states:CLOSED) {
    totalCount
  }
  openPRs: pullRequests(states: OPEN) {
    totalCount
  }
  closedPRs: pullRequests(states: [CLOSED, MERGED]) {
    totalCount
  } 
}
  `,Yt=`${_e}
query Repo($owner: String!, $name: String!, $cursor: String) {
  repository(name: $name, owner: $owner) {
    ...RepoInfo
    refs(
      refPrefix: "refs/heads/"
      orderBy: { field: TAG_COMMIT_DATE, direction: DESC }
      first: 100,
      after: $cursor
    ) {
      pageInfo {
        hasNextPage
        endCursor
      }
      totalCount
      nodes {
        name
      }
    }
  }
}`,Xt=`${_e}
query Forks($name: String!, $owner: String!, $count: Int!, $baseRef: String!, $branchCount: Int!, $cursor: String) {
  repository(name: $name, owner: $owner) {
    forks(
      first: $count
      after: $cursor
      privacy: PUBLIC
      orderBy: {direction: DESC, field: PUSHED_AT}
    ) {
      pageInfo {
        hasNextPage
        endCursor
      }
      totalCount
      nodes {
        ...RepoInfo,
        refs(
          refPrefix: "refs/heads/"
          orderBy: {field: TAG_COMMIT_DATE, direction: DESC}
          first: $branchCount
        ) {
          totalCount
          nodes {
            name
            compare(headRef: $baseRef) {
              behindBy: aheadBy
              aheadBy: behindBy
            }
          }
        }
        defaultBranchRef {
          name
          compare(headRef: $baseRef) {
            behindBy: aheadBy
            aheadBy: behindBy
          }
        }
      }
    }
  }
}`,Zt=`query ForkDetails($name: String!, $owner: String!, $headRef: String!) {
  repository(name: $name, owner: $owner) {
    defaultBranchRef {
      compare(headRef: $headRef) {
        headTarget {
          repository {
            id
            url
          }
        }
        commits(first: 20) {
          nodes {
            oid
            messageHeadline
            additions
            deletions
            committedDate
          }
        }
      }
    }
  }
}`;function ee(t){return{id:t.id,name:t.name,owner:t.owner.login,description:t.description,url:t.url,pushedAt:new Date(t.pushedAt),createdAt:new Date(t.createdAt),updatedAt:new Date(t.updatedAt),forks:{total:t.forkCount,direct:t.directForks.totalCount},stars:t.stargazers.totalCount,watchers:t.watchers.totalCount,issues:{open:t.openIssues.totalCount,closed:t.closedIssues.totalCount},pullRequests:{open:t.openPRs.totalCount,closed:t.closedPRs.totalCount},defaultBranch:t.defaultBranchRef.name,branches:t.refs.nodes.map(e=>e.name)}}function xt(t,e){const o=ee(t),a=t.refs.nodes,l=new Set(e.branches);return{base:`${e.owner}:${e.name}:${e.defaultBranch}`,head:`${o.owner}:${o.name}:${o.defaultBranch}`,aheadBy:t.defaultBranchRef.compare.aheadBy,behindBy:t.defaultBranchRef.compare.behindBy,descriptionChanged:o.description!==e.description,newBranches:a.filter(s=>s.compare.aheadBy>0&&!l.has(s.name)).map(s=>({name:s.name,aheadBy:s.compare.aheadBy,behindBy:s.compare.behindBy}))}}function eo(t){const e=t.repository.defaultBranchRef.compare;return e.commits.nodes.map(o=>({url:`${e.headTarget.repository.url}/commit/${o.oid}`,commitId:o.oid,message:o.messageHeadline,additions:o.additions,deletions:o.deletions,committedDate:o.committedDate}))}var T,L,D,$,z,J,$e,K,Se;class to{constructor(e,o){C(this,J);C(this,K);C(this,T,void 0);C(this,L,null);C(this,D,void 0);C(this,$,null);C(this,z,void 0);I(this,"batchSize",20);I(this,"branchCount",10);I(this,"maxBatchSize",100);I(this,"batchSizeScalingFactor",.3);I(this,"requestDurationTarget",6);N(this,T,o),N(this,D,e),N(this,z,new Map)}forks(){return Array.from(w(this,z).values()).sort((e,o)=>(o.score??0)-(e.score??0))}canLoadMore(){var e;return((e=w(this,$))==null?void 0:e.forks.direct)===0?!1:!w(this,L)||w(this,L).hasNextPage}async getRepo(){if(w(this,$))return w(this,$);var e;try{e=await w(this,D).graphql(Yt,{...w(this,T)})}catch(o){throw o instanceof be?Error(JSON.stringify(o.error)):o}return N(this,$,ee(e.repository)),w(this,$)}async getNextForks(){var l;const e=w(this,$);if(!e)throw new Error("You must await the result of getRepo once before calling other methods.");if(!this.canLoadMore())return[];for(var o;this.batchSize>0;)try{const s=performance.now();o=await w(this,D).graphql(Xt,{...w(this,T),baseRef:`${e.owner}:${e.name}:${e.defaultBranch}`,cursor:((l=w(this,L))==null?void 0:l.endCursor)??null,branchCount:this.branchCount,count:this.batchSize});const h=(performance.now()-s)/1e3;X(this,K,Se).call(this,h);break}catch(s){if(s instanceof we){this.batchSize=1,console.debug(`Request timeout. Set batch size to ${this.batchSize}.`);continue}throw s}if(this.batchSize===0)throw new Error("Batch size too small: can not complete request without timeout");N(this,L,o.repository.forks.pageInfo);var a=o.repository.forks.nodes.map(s=>({...ee(s),diff:xt(s,e)}));return X(this,J,$e).call(this,a),a}async getForkDetails(e){const o=w(this,z).get(e);if(!o||o.diff.commits!==void 0)return;const a=await w(this,D).graphql(Zt,{...w(this,T),headRef:`${o.owner}:${o.name}:${o.defaultBranch}`}),l=eo(a);o.diff.commits=l}}T=new WeakMap,L=new WeakMap,D=new WeakMap,$=new WeakMap,z=new WeakMap,J=new WeakSet,$e=function(e){if(!w(this,$)){console.assert(w(this,$));return}for(const o of e)o.score=Wt(o),w(this,z).set(o.id,o)},K=new WeakSet,Se=function(e){const o=e/this.requestDurationTarget;var a=this.batchSize/o;a=Le(this.batchSize,a,this.batchSizeScalingFactor),a=Math.min(Math.max(Math.floor(a),1),this.maxBatchSize),a!==this.batchSize&&console.debug(`Changed batch size to ${this.batchSize}.`),this.batchSize=a};const oo=t=>(j("data-v-6ba70b08"),t=t(),W(),t),so={key:0,class:"error"},ao={key:2,class:"align-center"},no=oo(()=>n("i",{class:"fa-solid fa-spinner fa-spin"},null,-1)),ro={key:3},io={class:"align-center"},lo={key:0},uo={key:1},co={key:0,id:"useless"},ho={class:"align-center"},fo=R({__name:"Forks",props:{githubAPI:{},query:{}},setup(t){const e=t;var o=null;De(()=>e.query,b),Q(b);const a=_(!1),l=_(""),s=_(null),h=_(!1),y=_(!1),v=_(null),d=_([]),g=ne(()=>d.value.filter(A=>A.score!==-1/0)),c=ne(()=>d.value.filter(A=>!A.score||A.score===-1/0));async function b(){s.value=null,v.value=null,d.value=[],a.value=!1,e.query&&e.githubAPI&&(y.value=!1,o=new to(e.githubAPI,e.query),k())}async function k(){if(s.value=null,!!o){if(h.value=o.canLoadMore(),a.value=!0,v.value=await o.getRepo(),!v.value){a.value=!1,h.value=!1,d.value=o.forks()??[];return}do l.value="Loading forks...",await o.getNextForks(),d.value=o.forks();while(y.value&&o.canLoadMore());a.value=!1,l.value="Load more",h.value=o.canLoadMore()}}async function S(A){s.value=null,o&&(await o.getForkDetails(A),d.value=o.forks())}return(A,G)=>(r(),i(m,null,[s.value?(r(),i("div",so,p(s.value),1)):f("",!0),v.value?(r(),P($t,{key:1,repo:v.value},null,8,["repo"])):a.value?(r(),i("div",ao,[no,u(" Loading... ")])):f("",!0),v.value?(r(),i("div",ro,[n("h2",null,[u(" Forks"),v.value?(r(),i(m,{key:0},[u(" ("+p(d.value.length)+" of "+p(v.value.forks.direct)+")",1)],64)):f("",!0)]),n("div",io,[h.value?(r(),P(de,{key:0,onClick:k,modelValue:y.value,"onUpdate:modelValue":G[0]||(G[0]=B=>y.value=B),loading:a.value,loadingText:l.value},null,8,["modelValue","loading","loadingText"])):f("",!0)]),!a.value&&v.value&&v.value.forks.direct===0?(r(),i("div",lo," This repository has no forks. ")):(r(),i("div",uo,[F(ie,{name:"list"},{default:re(()=>[(r(!0),i(m,null,M(g.value,B=>(r(),P(ue,{key:B.id,fork:B,onRequestCommits:S},null,8,["fork"]))),128))]),_:1}),c.value.length>0?(r(),i("details",co,[n("summary",null,p(c.value.length)+" useless forks",1),F(ie,{name:"list"},{default:re(()=>[(r(!0),i(m,null,M(c.value,B=>(r(),P(ue,{key:B.id,fork:B,onRequestCommits:S},null,8,["fork"]))),128))]),_:1})])):f("",!0)])),n("div",ho,[h.value&&d.value.length>0?(r(),P(de,{key:0,onClick:k,modelValue:y.value,"onUpdate:modelValue":G[1]||(G[1]=B=>y.value=B),loading:a.value,loadingText:l.value},null,8,["modelValue","loading","loadingText"])):f("",!0)])])):f("",!0)],64))}}),po=O(fo,[["__scopeId","data-v-6ba70b08"]]),mo=t=>(j("data-v-3c73197e"),t=t(),W(),t),go=mo(()=>n("h1",null,"ghforks",-1)),yo=[go],vo={key:0,class:"align-center"},ko={key:2,class:"text"},wo={key:0,class:"align-center"},bo=R({__name:"App",setup(t){const e=_(!1),o=_(null),a=_(null);function l(y){e.value=!0,o.value=new ce(y)}function s(){e.value=!1,o.value=null}function h(y){a.value=y}return Q(async()=>{const y=await me();y&&(o.value=new ce(y))}),(y,v)=>(r(),i(m,null,[n("header",null,[n("a",{onClick:v[0]||(v[0]=d=>a.value=null),href:"/",class:"no-highlight"},yo),e.value?(r(),P(le,{key:0,onLogout:s})):f("",!0)]),e.value?(r(),i("div",vo,[F(Ne,{onChange:h})])):f("",!0),a.value&&e.value?(r(),P(po,{key:1,githubAPI:o.value,query:a.value},null,8,["githubAPI","query"])):(r(),i("div",ko,[e.value?f("",!0):(r(),i("div",wo,[F(le,{onLogin:l})])),F(tt)]))],64))}}),_o=O(bo,[["__scopeId","data-v-3c73197e"]]);ze(_o).mount("#app");
